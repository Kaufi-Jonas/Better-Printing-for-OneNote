<MenuItem x:Class="Better_Printing_for_OneNote.Views.Controls.EditablePresetMenuItem"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:vg="clr-namespace:Better_Printing_for_OneNote.Views.Controls.VectorGraphics"
          xmlns:system="clr-namespace:System;assembly=System.Runtime"
          mc:Ignorable="d"
          StaysOpenOnClick="True"
          IsCheckable="True"
          x:Name="MenuItem"
          MouseLeave="MenuItem_MouseLeave"
          Focusable="False"
          Click="MenuItem_Click">
    <!--<StackPanel Orientation="Horizontal">
        <TextBlock Text="{Binding Name}"/>
        <Button ToolTip="Delete preset" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="DeleteBtn_Click" BorderThickness="2">
            <vg:CropVectorGraphic StrokeThickness="2" Margin="8 1 8 1" />
        </Button>
        <Button ToolTip="Edit preset name" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="EditBtn_Click" BorderThickness="2">
            <vg:EditVectorGraphic StrokeThickness="2" Margin="8 1 8 1" />
        </Button>
    </StackPanel>-->
    <!--<MenuItem.Style>
        <Style>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="{DynamicResource ReadOnly}" Value="True"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </MenuItem.Style>-->

    <!-- fix Data Errors -->
    <MenuItem.Style>
        <Style TargetType="MenuItem">
            <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
        </Style>
    </MenuItem.Style>

    <MenuItem.Resources>
        <system:Boolean x:Key="ReadOnly">True</system:Boolean>
    </MenuItem.Resources>

    <MenuItem.HeaderTemplate>
        <DataTemplate>
            <Grid DataContext="{Binding ElementName=MenuItem, Path=DataContext}"
                  Focusable="True"
                  Margin="0 0 -49 0"
                  Height="24"
                  FocusVisualStyle="{x:Null}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid PreviewKeyDown="NameTextBox_PreviewKeyDown">
                    <TextBlock Text="{Binding Name, FallbackValue='new Preset'}"
                               MinWidth="140"
                               MaxWidth="140"
                               IsEnabled="{DynamicResource ReadOnly}"
                               VerticalAlignment="Center"
                               Margin="2 0 0 0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                 Value="False">
                                        <Setter Property="Visibility"
                                                Value="Hidden" />
                                    </DataTrigger>
                                    <!--<DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False">
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=NameTextBox}"/>
                                    </DataTrigger>-->
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <!--<TextBlock.Style TargetType="{x:Type TextBlock}">
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=NameTextBox, Path=IsReadOnly}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>-->

                    <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             x:Name="NameTextBox"
                             Focusable="True"
                             VerticalAlignment="Center"
                             IsReadOnly="{DynamicResource ReadOnly}"
                             LostFocus="MenuItem_LostFocus"
                             LostKeyboardFocus="NameTextBox_LostKeyboardFocus"
                             Margin="-6 0 0 0"
                             Padding="1"
                             MinWidth="140"
                             MaxWidth="140">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Hidden" />
                                    </DataTrigger>
                                    <!--<DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False">
                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=NameTextBox}"/>
                                    </DataTrigger>-->
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </Grid>
                <!--<TextBox Text="{Binding Name, FallbackValue='new Preset'}" VerticalAlignment="Center" x:Name="NameTextBox" IsReadOnly="{DynamicResource ReadOnly}" PreviewKeyDown="NameTextBox_PreviewKeyDown">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="Background" Value="Transparent" />
                                </DataTrigger>
                                -->
                <!--<DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False">
                                    <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=NameTextBox}"/>
                                    <Setter Property="FocusManager.IsFocusScope" Value="True"/>
                                </DataTrigger>-->
                <!--
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>-->
                <Border Grid.Column="2"
                        Padding="0 2 2 2">
                    <StackPanel Orientation="Horizontal">
                        <Button ToolTip="Edit preset name"
                                Click="EditBtn_Click"
                                HorizontalAlignment="Right"
                                Padding="1">
                            <vg:EditVectorGraphic StrokeThickness="2.4" />
                        </Button>
                        <Button ToolTip="Delete preset"
                                Click="DeleteBtn_Click"
                                Padding="1"
                                Margin="3 0 0 0">
                            <vg:TrashCanVectorGraphic StrokeThickness="2.6" />
                        </Button>
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>
    </MenuItem.HeaderTemplate>
    <!--<MenuItem.Template>
        
        <ControlTemplate TargetType="{x:Type MenuItem}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                <CheckBox VerticalAlignment="Center" Background="{x:Null}" BorderBrush="{x:Null}">
                    <CheckBox.LayoutTransform>
                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                    </CheckBox.LayoutTransform>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name, FallbackValue='new Preset'}" VerticalAlignment="Center" Width="100"/>
                        <Button ToolTip="Delete preset" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="DeleteBtn_Click" HorizontalAlignment="Right">
                            <vg:CropVectorGraphic />
                        </Button>
                        <Button ToolTip="Edit preset name" VerticalAlignment="Center" VerticalContentAlignment="Center" Click="EditBtn_Click" HorizontalAlignment="Right">
                            <vg:EditVectorGraphic />
                        </Button>
                    </StackPanel>
                </CheckBox>

            </StackPanel>
        </ControlTemplate>
    </MenuItem.Template>-->

    <!--<MenuItem.ItemContainerStyle>
        <Style TargetType="MenuItem">
            <Setter Property="Template">
                <Setter.Value>
                    
                </Setter.Value>
            </Setter>
        </Style>
    </MenuItem.ItemContainerStyle>-->

    <!--<DataTemplate xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""  xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml"">
    <TextBlock Text=""{Binding .}"" Margin=""3 0 0 0"">
            //
        <TextBlock.Background>
            //
            <SolidColorBrush Opacity=""0""/>
            //
        </TextBlock.Background>
            //</TextBlock>
    //
    </DataTemplate> ")));-->

</MenuItem>
